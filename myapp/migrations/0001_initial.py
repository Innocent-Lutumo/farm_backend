# Generated by Django 5.2.1 on 2025-07-03 23:55

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import myapp.models
import myapp.utils
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='PurchaseAgreement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('farm_number', models.CharField(blank=True, max_length=50)),
                ('location', models.CharField(max_length=100)),
                ('size', models.FloatField()),
                ('quality', models.CharField(max_length=100)),
                ('farm_type', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField(blank=True)),
                ('price', models.FloatField()),
                ('full_name', models.CharField(max_length=100)),
                ('contact_info', models.CharField(max_length=20)),
                ('buyer_email', models.EmailField(max_length=254)),
                ('purpose', models.CharField(blank=True, max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('landlord_name', models.CharField(blank=True, max_length=100)),
                ('landlord_phone', models.CharField(blank=True, max_length=20)),
                ('landlord_email', models.EmailField(blank=True, max_length=254)),
                ('landlord_residence', models.CharField(blank=True, max_length=100)),
                ('landlord_passport', models.CharField(blank=True, max_length=50)),
                ('farm_id', models.CharField(blank=True, max_length=50, null=True)),
                ('transaction_id', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('terminated', 'Terminated'), ('expired', 'Expired')], default='active', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='RentalAgreement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('farm_number', models.CharField(blank=True, max_length=50)),
                ('location', models.CharField(max_length=100)),
                ('size', models.FloatField()),
                ('quality', models.CharField(max_length=100)),
                ('farm_type', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField(blank=True)),
                ('price', models.FloatField()),
                ('full_name', models.CharField(max_length=100)),
                ('renter_phone', models.CharField(max_length=20)),
                ('renter_email', models.EmailField(max_length=254)),
                ('residence', models.CharField(max_length=100)),
                ('landlord_name', models.CharField(blank=True, max_length=100)),
                ('landlord_phone', models.CharField(blank=True, max_length=20)),
                ('landlord_email', models.EmailField(blank=True, max_length=254)),
                ('landlord_residence', models.CharField(blank=True, max_length=100)),
                ('landlord_passport', models.CharField(blank=True, max_length=50)),
                ('farm_id', models.CharField(blank=True, max_length=50, null=True)),
                ('transaction_id', models.CharField(blank=True, max_length=100, null=True)),
                ('duration_months', models.IntegerField(default=12)),
                ('status', models.CharField(choices=[('active', 'Active'), ('terminated', 'Terminated'), ('expired', 'Expired')], default='active', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('seller_name', models.CharField(max_length=150)),
                ('seller_residence', models.CharField(max_length=150)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='myapp_user_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='myapp_user_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='FarmRent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(max_length=100)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quality', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('description', models.TextField()),
                ('phone', models.CharField(max_length=15)),
                ('farm_type', models.CharField(default='Rent', max_length=4)),
                ('rent_duration', models.CharField(blank=True, max_length=100, null=True)),
                ('is_rented', models.BooleanField(default=False)),
                ('farm_number', models.CharField(default='N/A', max_length=100)),
                ('passport', models.ImageField(default='N/A', upload_to='passports/')),
                ('ownership_certificate', models.ImageField(blank=True, null=True, upload_to='certificates/')),
                ('click_count', models.IntegerField(default=0)),
                ('is_validated', models.BooleanField(default=False)),
                ('is_rejected', models.BooleanField(default=False)),
                ('admin_feedback', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(default=myapp.models.get_default_user, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FarmRentTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_validated', models.BooleanField(default=False)),
                ('is_rejected', models.BooleanField(default=False)),
                ('admin_feedback', models.TextField(blank=True, null=True)),
                ('transaction_id', models.CharField(max_length=100, unique=True)),
                ('renter_email', models.EmailField(max_length=254)),
                ('renter_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('full_name', models.CharField(blank=True, max_length=100, null=True)),
                ('residence', models.CharField(blank=True, max_length=100, null=True)),
                ('national_id', models.CharField(blank=True, max_length=50, null=True)),
                ('is_rented', models.BooleanField(default=False)),
                ('rent_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Confirmed', 'Confirmed'), ('Cancelled', 'Cancelled')], default='Pending', max_length=20)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.farmrent')),
                ('user', models.ForeignKey(default=myapp.utils.some_user_function, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FarmSale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(max_length=100)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quality', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('description', models.TextField()),
                ('phone', models.CharField(max_length=15)),
                ('farm_type', models.CharField(default='Sale', max_length=4)),
                ('is_sold', models.BooleanField(default=False)),
                ('farm_number', models.CharField(default='N/A', max_length=100)),
                ('passport', models.ImageField(default='N/A', upload_to='passports/')),
                ('ownership_certificate', models.ImageField(blank=True, null=True, upload_to='certificates/')),
                ('click_count', models.IntegerField(default=0)),
                ('is_validated', models.BooleanField(default=False)),
                ('is_rejected', models.BooleanField(default=False)),
                ('admin_feedback', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(default=myapp.models.get_default_user, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FarmImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='farm_images/')),
                ('uploaded_at', models.DateTimeField(blank=True, null=True)),
                ('farm_rent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='myapp.farmrent')),
                ('farm_sale', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='myapp.farmsale')),
            ],
        ),
        migrations.CreateModel(
            name='FarmSaleTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(max_length=100, unique=True)),
                ('buyer_email', models.EmailField(max_length=254)),
                ('full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('contact_info', models.CharField(blank=True, max_length=100, null=True)),
                ('national_id', models.CharField(blank=True, max_length=100, null=True)),
                ('intended_use', models.TextField(blank=True, null=True)),
                ('is_rented', models.BooleanField(default=False)),
                ('buyer_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Confirmed', 'Confirmed'), ('Cancelled', 'Cancelled')], default='Pending', max_length=20)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.farmsale')),
            ],
        ),
    ]
